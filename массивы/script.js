// let fruits = ["Яблоко", `Апельсин`,`Банан`];
// fruits [1] = `Мандарин`; // Заменили 2 элемент в массиве
// fruits [3] = `Лайм`; // Добавили новый элемент в конец
// alert (fruits[3]);
// alert (fruits.length); //4 элемента находятся в массиве


// pop____________________________________________

// let fruits = ["Яблоко", `Апельсин`,`Банан`];
// alert (fruits.pop())  // удалили последний элемент из массива и  вывели его
// alert (fruits.length); 

// push____________________________________________

// let fruits = ["Яблоко", `Апельсин`,`Банан`];
// fruits.push("Мандарин", "Кокос");  // Добавили Мандарин и Кокос в конец массива;\
// alert (fruits.push("Груша", "Ананас"))  // добавили грушу и ананас в конец массива и вывели их  ------- Вызов fruits.push(...) равнозначен fruits[fruits.length] = ....
// alert (fruits);  

// Перебор элементов___________________________________________

// let numbers = [1,2,3,4,5];
// for ( let i = 0; i < numbers.length; i++ ) {
//     alert ( numbers[i] );
// } 

//  или будет выводиться значение элемента массива - Яблоко , Апельсин, Груша

// let arr = ["Яблоко", "Апельсин", "Груша"];
// for (let i = 0; i < arr.length; i++) {
//   alert( arr[i] );
// }

// for of ___________________________________________

// let fruits = ["Яблоко", "Апельсин", "Слива"];
// // проходит по значениям
// for (let fruit of fruits) {
//   alert( fruit );
// }


// o lenght ___________________________________________

// let numbers = [1, 2, 3, 4, 5];
// numbers.length = 2; // укорачиваем до двух элементов
// alert( numbers ); // [1, 2]
// numbers.length = 5; // возвращаем length как было
// alert( numbers[3] ); // undefined: значения не восстановились

// let numbers = [1, 2, 3, 4, 5];
// alert  [numbers.length + 1] = 6;
// alert (numbers);

// многомерные массивы___________________________________________

// let matrix = [
//               [1,2,3],
//               [4,5,6],
//               [7,8,9]
//             ]; 
// alert (matrix); // 1,2,3,4,5,6,7,8,9
// alert (matrix [1][1]); // 5  

// toString___________________________________________

// let arr = [1, 2, 3];
// alert( arr ); // 1,2,3
// alert( String(arr) === '1,2,3' ); // true    toString возвращает список элементов, разделённых запятыми.


// Давайте произведём 5 операций с массивом.
// Создайте массив styles с элементами «Джаз» и «Блюз».
// Добавьте «Рок-н-ролл» в конец.
// Замените значение в середине на «Классика». Ваш код для поиска значения в середине должен работать для массивов с любой длиной.
// Удалите первый элемент массива и покажите его.
// Вставьте «Рэп» и «Регги» в начало массива.


// Решение___________________________________________

// let styles = ["Джаз", "Блюз"];
// styles.push("Рок-н-ролл");
// styles [Math.floor((styles.length - 1) / 2)] = "Классика";
// styles.shift()  ;
// styles.unshift ('Рэп', 'Рэгги');
// alert (styles);
// alert (styles.length);



// Методы массивов--- splice___________________________________________


// arr.splice(index[, deleteCount, elem1, ..., elemN])
// Он начинает с позиции index, удаляет deleteCount элементов и вставляет elem1, ..., elemN на их место.


//  УДАЛЕНИЕ  ______________
// let arr = ["I", "go", "home"];  
// arr.splice (0,1); // Удаляем "I" , 0 это индекс, 1 это deleteCount
// alert (arr);

// УДАЛЕНИЕ И ДОБАВЛЕНИЕ НОВЫХ
// let arr = ["I",'go','home','with','you'];
// arr.splice (0, 3, "He", 'ran',); // удалили 3 первых элемента начиная с 0 и добавили he ran
// alert (arr);


// возврат массива из удалённых элементов _______________

// let arr = ["Я", "изучаю", "JavaScript", "прямо", "сейчас"];
// удалить 2 первых элемента
// let removed = arr.splice(0, 2);
// alert( removed ); // "Я", "изучаю" <-- массив из удалённых элементов



// Метод splice также может вставлять элементы без удаления, для этого достаточно установить deleteCount в 0:

// let arr = ["Я", "изучаю", "JavaScript"];
// // с позиции 2
// // удалить 0 элементов
// // вставить "сложный", "язык"
// arr.splice(2, 0, "сложный", "язык");
// alert( arr ); // "Я", "изучаю", "сложный", "язык", "JavaScript"


// Если отрицательный индекс, то последний индекс элекмента - число отрицательное и оттуда пойдет :

// let arr = [1, 2, 5];
// // начиная с индекса -1 (перед последним элементом)
// // удалить 0 элементов,
// // затем вставить числа 3,5,7,9,4
// arr.splice(-1, 0, 3,5,7,9,4);
// alert( arr ); // 1,2,3,5,7,9,4,5

// Методы массивов--- slice___________________________________________

// arr.slice([start], [end])
// Он возвращает новый массив, в который копирует элементы, начиная с индекса start и до end (не включая end). 

// let arr = ["t", "e", "s", "t"];
// alert( arr.slice(1, 4) ); // e,s (копирует с 1 до 4)
// alert( arr.slice(-2) ); // s,t (копирует с -2 до конца)



// Методы массивов--- concat___________________________________________

// Метод arr.concat создаёт новый массив, в который копирует данные из других массивов и дополнительные значения.
// arr.concat(arg1, arg2...)
// let arr = [1, 2];
// // создать массив из: arr и [3,4]
// alert( arr.concat([3, 4]) ); // 1,2,3,4
// // создать массив из: arr и [3,4] и [5,6]
// alert( arr.concat([3, 4], [5, 6]) ); // 1,2,3,4,5,6
// // создать массив из: arr и [3,4], потом добавить значения 5 и 6
// alert( arr.concat([3, 4], 5, 6) ); // 1,2,3,4,5,6


// Методы массивов Перебор: forEach ___________________________________________

// Метод arr.forEach позволяет запускать функцию для каждого элемента массива.
// arr.forEach(function(item, index, array) {
//  ... делать что-то с item
//   });


// Вызов alert для каждого элемента
// ["Bilbo", "Gandalf", "Nazgul"].forEach(alert);


// Поиск___________________________________________


// let arr = [1, 0, "Василий", false];
// alert( arr.indexOf("Василий") ); // 2
// alert( arr.indexOf(false) ); // 3
// alert( arr.indexOf(null) ); // -1
// alert( arr.includes("Василий") ); // true


// отличием includes является то, что он правильно обрабатывает NaN в отличие от indexOf/lastIndexOf: ________________

// const arr = [NaN];
// alert( arr.indexOf(NaN) ); // -1 (должен быть 0, но === проверка на равенство не работает для NaN)
// alert( arr.includes(NaN) );// true (верно)


// let str = "привет";
// alert ( str.split('')); // п,р,и,в,е,т


// Учим пузырьковый метод сортировки_______________________________________________________

// let arr = [2,5,7,6,23,4,14,20,12,10];
// for (let i = 0; i < arr.length-1 ; i++) { // arr.lenght-1 потому что у последнего числа нет пары с кем сравнивать
//     if (arr[i] > arr [i+1] ) {
//         let buff = arr[i];   // buff будет элементом с нулевым индексом в массиве;
//         arr [i] = arr [i+1]; // если значение в левое значение в сравниваемой паре будет больше значения правого, то левое станет правым
//         arr [i+1] = buff;  //  а левое станет правым
//     }
// }
// for (let i = 0; i < arr.length-1 ; i++) {
//     if (arr[i] > arr [i+1] ) {
//         let buff = arr[i];   // buff будет элементом с нулевым индексом в массиве;
//         arr [i] = arr [i+1]; // если значение в левое значение в сравниваемой паре будет больше значения правого, то левое станет правым
//         arr [i+1] = buff;  //  а левое станет правым
//     }
// }
// for (let i = 0; i < arr.length-1 ; i++) {
//     if (arr[i] > arr [i+1] ) {
//         let buff = arr[i];   // buff будет элементом с нулевым индексом в массиве;
//         arr [i] = arr [i+1]; // если значение в левое значение в сравниваемой паре будет больше значения правого, то левое станет правым
//         arr [i+1] = buff;  //  а левое станет правым
// }
// }  alert (arr); 
//  в таком случае 3 последних числа будут самыми большими , но чтобы не повторять цикл самостоятельно сделаем цикл в цикле:

// let arr = [2,5,7,6,23,4,14,20,12,10];
// for ( n = 0 ; n < arr.length; n++ ){
// for (let i = 0; i < arr.length-1-n ; i++) {
//     if (arr[i] > arr [i+1] ) {
//         let buff = arr[i];   // buff будет элементом с нулевым индексом в массиве;
//         arr [i] = arr [i+1]; // если значение в левое значение в сравниваемой паре будет больше значения правого, то левое станет правым
//         arr [i+1] = buff;  //  а левое станет правым
//     } 
// }
// }alert (arr) // все решено , но упорядоченные элементы все равно сравниваются друг с другом и чтобы это исключить в условии цикла в 258 строке нужно отнять еще и n 

// ________________________________________________________________________________________________________________________________________________
// пробую просто .sort

// let arr = [2,5,7,6,10,4,14,20,12,23];
// arr.sort((a, b) => b - a);  ------ если с числами сортировать
// alert (arr);


//http:mathhelpplanet.com/static.php?p=javascript-algoritmy-sortirovki  - по алгоритмам сортировки
// Решали на паре__________________________________________________________________________________________________________________

// 1. создать любой массив из 10 чисел, вывести в консоль сумму всех
// элементов массива

// let arr = [1,2,3,4,5,6,7,8,9,10];
// let sum = 0
// for (let i = 0; i < arr.length; i++) {
//     sum += arr[i];
// } alert (sum);


// 2. найти среднее арифметическое элементов массива которые стоят
// на четных местах

// let arr = [1,2,3,4,5,6,7,8,9,10];
// let AmountNumbers = 0;
// let CounterI = 0;
// for (let i = 0 ; i < arr.length ; i++ ) {
//     if ( i% 2 === 0) {
//         AmountNumbers +=arr[i];
//         CounterI++;
//     } else {continue};
// } alert (AmountNumbers/CounterI);


// 3. создать массив элементы которого равны элементам исходного 
// массива (созlаем его сами), но с противоположными знаками

// let arr = [1,-2,3,-4,5,-6,7,-8,9,-10];
// let arr2 = [];
// for ( let i = 0; i < arr.length; i++ ) {
//     arr2.push (-arr[i]);
//   // arr2[i] = -arr [i];
// } alert (arr2);


// __________________________________________________________________________________________________________
// ДОМАШКА

// 1. Создайте путой массив. С помощью цикла заполните массив числами, где каждое число
// равно квадрату своего номера. (длина массива должна быть 10)

// let arr = [];
// for (let i = 0; i < 10; i++) {
//     arr.push(i**2);
// }   alert (arr);
//     alert (arr.length);

// Вариант через Math.pow(число, степень) 

// let arr = [];
// for (let i = 0; i < 10; i++) {
//     arr.push(Math.pow(i,2));
// }   alert (arr);
//     alert (arr.length);



// 2. Создать случайный массив из 10 чисел. Вывести на экран
// количество четных чисел из этого массива.
// let counter = 0;
// let arr = [2,5,7,6,10,4,14,20,12,23];
// for (let i = 0 ; i < arr.length ; i++) {
//     if (arr[i] % 2 === 0 ) { 
//         counter++;
//     }
// } alert (counter);


// 3. Создать случайный массив из 10 чисел. Вывести на экран
// наибольшее число из этого массива.

// let arr = [2,5,7,6,23,4,14,20,12,10];
// function SelectionSort(arr)       // A - массив, который нужно
// {                               // отсортировать по возрастанию.
//     let n = arr.length;
//     for (let i = 0; i < n-1; i++) {
//         let min = i;
//         for (let j = i+1; j < n; j++) { 
//             if (arr[j] < arr[min]) min = j;
//         } 
//         let t = arr[min]; arr[min] = arr[ i ]; arr[ i ] = t;
//     }                    
//     return arr;    // На выходе сортированный по возрастанию массив arr.
// }
// SelectionSort(arr);
// alert (arr[arr.length - 1]);
// alert (arr);

// 4. Дана строка «Мы любим JavaScript». Используя
// метод split, создайте на основе это строки
// массив.(Вывод данных: Мы,любим,JavaScript).

// let arr = "Мы любим JavaScript".split (" ");
// alert (arr); 

// 5.Дан массив ["Мы","любим","JavaScript"]. Используя
// метод join, создайте и выведите строку. В качестве
// разделителя используйте "!" (Вывод данных: Мы!любим!JavaScript).

// let arr = ["Мы", "любим", "JavaScript"];
// alert(arr.join("!"));


// 6.Дан массив ["Я","великий","программист!"] с
// помощью метода indexOf, вывести на экран
// номер позиции строки "программист!"

// let arr = ["Я","великий","программист!"];
// alert (arr.indexOf("программист!"));

//Решаю какие-то задачи на массивы________________________________________________________________________________________________________________
// Напишите код, преобразующий массив цифр, которые располагаются неупорядоченно, в массив цифр расположенных по убыванию их значений.

// let arr = [5, 7, 2, 9, 3, 1, 8];
// console.log (arr.slice().sort((a, b) => b - a));


// Напишите код, объединяющий три массива цифр, и располагающий цифры, в полученном массиве, в порядке убывания их значений

// let a = [1,2,3];
// let b = [4,5,6];
// let c = [7,8,9];
// console.log(a.concat(b).concat(c).sort ( (a,b) => b - a ));


// Клонировать массив

// let vegetables = ['Капуста', 'Репа', 'Редиска', 'Морковка'];
// let vegetables1 = vegetables.concat();
// alert (vegetables === vegetables1);
// alert (vegetables1);


// let vegetables = ['Капуста', 'Репа', 'Редиска', 'Морковка'];
// let vegetables1 = [];
// for (let i = 0; i<vegetables.lenght; i++){
//     vegetables1.push(vegetables[i]);
// } alert (vegetables1); спросить

// Напишите код, который преобразовывает и объединяет все элементы массива в одно строковое значение. Элементы массива будут разделены запятой. Получите результат двумя разными методами.
// let vegetables = ['Капуста','Репа','Редиска'];
// console.log ( vegetables.join (",")) ;
// 2.
// let vegetabl = ['Капуста','Репа','Редиска'];
// console.log ( vegetabl.toString(",")) ;




// есть два массива arr1 = [1, 2, 3, 4, 5]; и arr2 = [ 4, 5, 6], нужно сложить элементы массива по их индексам, тоесть должен получиться массив [5, 7, 9, 4, 5]

// let arr1 = [1, 2, 3, 4, 5];
// let arr2 = [4, 5, 6];
// let count;
// if (arr1.length > arr2.length) {
//     count = arr1.length;
// } else { 
//     count = arr2.length;
// }
// let arr3 = [];
// for (let i = 0;  i < count; i++) {
//     if (arr1[i] === undefined) {
//         arr1.push (0);
//     }
//     if (arr2[i] === undefined) {
//         arr2.push (0);
//     }
//     arr3.push (arr1[i]+arr2[i]);
// } alert (arr3);


// Напишите код, который возвращает сумму квадратов значений массива. [1, 2, 3, 4, 5]

// Напишите код, который определяет сумму и произведение значений массива. [ 1, 2 , 3 , 4 , 5 , 6 , 7, 8 ,9];

// Пользователь вводит целое число. Напишите код, который выведет число, обратное по порядку составляющих его цифр введенному. Например, введено 9876, надо вывести 6789. Решите задачу через цикл while.

// Пользователь вводит с клавиатуры натуральное число. Найдите его наибольшую цифру и выведите её через alert.

// Например, введено число 987560. Наибольшая цифра в нем 9.

// Заполните массив 10-ю случайными числами (дробями) от 0 до 1 с помощью цикла. Дроби округляйте до двух знаков в дробной части.Скрыть решение.

// Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8, 9. С помощью цикла for создайте строку '-1-2-3-4-5-6-7-8-9-'.

// ___________________________________________________________________________________________________________________________________________

// Пользователь вводит многозначное число через promt. Напишите код, который принимает число  в качестве аргумента и вставляет двоеточие (:) между двумя нечетными числами. Например, если вводится число 55639217, то на выход должно быть 5:563:921:7.

// Пользователь вводит строку кириллицей разного регистра. Напишите функцию, которая принимает строку в качестве аргумента и заменяет регистр каждого символа на противоположный. Например, если вводится «КаЖдЫй ОхОтНиК», то на выходе должен быть массив [кАжДыЙ оХоТнИк].

// Напишите код, которая возвращает количество повторяющихся элементов в массиве.

// - хрен знает


// let counter = 0;
// let result = [];

// for (let i = 0; i < arr.length; i++) {
//     if (arr.includes(arr[i], i + 1) && !result.includes(arr[i])) {
//         result.push(arr[i]);
//     }
// }

// let a = 5235;
// a = a + '';

// let aArr = a.split('');
// for (let i = 0; i < aArr.length; i++) {
//     if (aArr[i] % 2 > 0) {
//         aArr[i] = aArr[i] + ":";
//     }
// }

// console.log(aArr);


// 1. На основании данног массива
// сформировать массив только из тех чисел которые повторялись в исходном

// const arr = [1,2,3,4,5,4,1,2,3,4,2,3];
// let result = [];
// for (let i = 0; i < arr.length; i++) {
//     if ((arr.includes(arr[i], i+1)) && !result.includes(arr[i])) {
//         result.push(arr[i]);
//     }
// } alert (result);


// 2. Найти максимальное число в массиве
// let arr = [1,2,3,4,5,4,1,2,3,4,2,3];
// let buff;
// for ( let i = 0; i <= arr.length - 1; i++)
// if ( arr[i] > arr[i+1] ) {
//     buff = arr[i];
//     arr[i] = arr[i+1];
//     arr[i+1] = buff;
// } alert (arr[arr.length -1]);

// 3. Посчитать сумму только ЧЕТНЫХ чисел

// let arr = [1,2,3,4,5,4,1,2,3,4,2,3];
// let sum = 0
// for ( let i = 0; i < arr.length; i++) {
//     if (arr[i]%2 ===0) {
//         sum +=arr[i]
//     }
// } alert (sum);

// 4. На основе исходного массива 
// Сформировать массив из 3х чисел, сумма которых максимальна
// let arr = [1,2,3,4,5,4,1,2,3,4,2,3];
// let sum = 0;
// let arr1 = [];
// for (let i =0; i< arr.length-2; i++) {
//     if ( sum < arr[i]+arr[i+1]+arr[i+2]) {
//         sum = arr[i]+arr[i+1]+arr[i+2];
//         arr1.splice(0,3,arr[i],arr[i+1],arr[i+2]);
//     } 
// } alert (arr1);

// ____________________________________________________________________________________________________________________________________________
// Решал препод

// 1. На основании данног массива
// сформировать массив только из тех чисел которые повторялись в исходном


// for (let i = 0; i < arr.length; i++) {
//     if (arr.includes(arr[i], i + 1) && !result.includes(arr[i]) ) {
//         result.push(arr[i]);
//     }
// }

// console.log(result);

// 2. Найти максимальное число в массиве

// let max = arr[0];

// for (let i = 0; i < arr.length; i++) {
//     if (max < arr[i]) {
//         max = arr[i];
//     }
// }

// console.log(max);

// 3. Посчитать сумму только ЧЕТНЫХ чисел
// const arr = [1,2,3,4,5,1564,1,21312,3,4, 1, 564, 2,3];
// let sum = 0;

// for (let i = 0; i < arr.length; i++) {
//     if (arr[i] % 2 === 0) {
//         sum += arr[i];
//     }
// }



// 4. На основе исходного массива 
// Сформировать массив из 3х чисел, сумма которых максимальна

// const arr = [1,2,3,4,5,3,1,6,3,4,1,75,2,3];
// let result;
// let sum = 0;
// let index;

// for (let i = 0; i < arr.length - 2; i++) {
//     let currentSum = arr[i] + arr[i + 1] + arr[i + 2];
//     if (currentSum > sum) {
//         sum = currentSum;
//         index = i;
//     }
// }

// console.log( arr.slice(index, index+3)  );

// _______________________________________________________________________________________________________________________________

// let counter = 0;
// let result = [];

// for (let i = 0; i < arr.length; i++) {
//     if (arr.includes(arr[i], i + 1) && !result.includes(arr[i])) {
//         result.push(arr[i]);
//     }
// }

// let a = 5235;
// a = a + '';

// let aArr = a.split('');
// for (let i = 0; i < aArr.length; i++) {
//     if (aArr[i] % 2 > 0) {
//         aArr[i] = aArr[i] + ":";
//     }
// }

// console.log(aArr);


